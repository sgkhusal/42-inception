server {
	server_name	WP_DOMAIN;

	# set nginx to listen on port 443 (default port for HTTPS)
	# ssl: indicates that it is an HTTPS(SSL/TLS) configuration
	# http2: HTTP/2 protocol is supported (newer and faster version of HTTP protocol)
	# default_server: this server will be the default server for requests on port 443
	listen 443 ssl http2 default_server;
	# same as above but also for IPv6 addresses
	listen [::]:443 ssl http2 default_server;

	# ssl on; deprecated
	ssl_certificate		CERT;
	ssl_certificate_key	CERT_KEY;
	ssl_protocols		TLSv1.2 TLSv1.3;

	# the default root: path to wordpress files
	root /var/www/wordpress;

	# define the default index file, which ngnix will look for in the requested path
	index index.php;

	# handle requests for wordpress permalinks
	location / {
		# root /var/www/wordpress;
		# if the file is not found, passes the request to wordpress 'index.php'
		# with query  parameters:
		try_files $uri $uri/ /index.php?$args;
		# try_files $uri $uri/ =404; # if not found, return 404
	}

	# handle requests to php files
	location ~ \.php$ {
		# try_files $uri =404;

		# ensure DNS lookups work as expected within Docker containers:
		# resolver 127.0.0.11; # check if it is really necessary
		# context: the container is often isolated from host's DNS settings in
		# a Docker network.
		# To alow containers to resolve domain names, Docker uses 127.0.0.11 as
		# an internal DNS revolver to perform DNS lookups for domain names

		# splits the uri e.g: /example.php/path/info: /example.php | /path/info
		# these parts are passed to php-fpm as fastcgi parameters, allowing the
		# PHP script to access both the PHP script itself and the additional path info
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		fastcgi_pass wordpress:9000; # send requests to wordpress container
		fastcgi_index index.php;
		fastcgi_intercept_errors on;

		include fastcgi_params;
		# set SCRIPT_FILENAME to the full path of the PHP script
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		# set SCRIPT_NAME to the php script (e.g. /example.php)
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		# set PATH_INFO to the additional info path (e.g. /path/info)
		fastcgi_param PATH_INFO $fastcgi_path_info;
	}

	# set up path to log files
	# access_log /var/log/nginx/nginx.vhost.access.log;
	# error_log /var/log/nginx/nginx.vhost.error.log;
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# error_page 500 502 503 504 /50x.html;
}